// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaDeRentCar.Models;

#nullable disable

namespace SistemaDeRentCar.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230201151638_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("SistemaDeRentCar.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Estado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LimiteCredito")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NTarjetaCR")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoPersona")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("SistemaDeRentCar.Models.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Estado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ProcientoComision")
                        .HasColumnType("TEXT");

                    b.Property<string>("TandaLabor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("SistemaDeRentCar.Models.Inspeccion", b =>
                {
                    b.Property<int>("IdTransacción")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CantidadCombustible")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Estado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EstadoGomas")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdCliente")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdVehículo")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("TieneGato")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("TieneGomaRespuesta")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("TieneRalladuras")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdTransacción");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdVehículo");

                    b.ToTable("Inspeccions");
                });

            modelBuilder.Entity("SistemaDeRentCar.Models.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Estado")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("SistemaDeRentCar.Models.Modelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Estado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdMarca")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdMarca");

                    b.ToTable("Modelos");
                });

            modelBuilder.Entity("SistemaDeRentCar.Models.RentaDevolucion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CantidadDia")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Estado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaDevolucion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaRenta")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdCliente")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdVehiculo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MontoDia")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdVehiculo");

                    b.ToTable("RentaDevolucions");
                });

            modelBuilder.Entity("SistemaDeRentCar.Models.TipoDeCombustible", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Estado")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("TipoDeCombustibles");
                });

            modelBuilder.Entity("SistemaDeRentCar.Models.TipoDeVehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Estado")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("TipoDeVehiculos");
                });

            modelBuilder.Entity("SistemaDeRentCar.Models.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Estado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdMarca")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdModelo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdTipoCombustible")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdTipoVehiculo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NChasis")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<string>("NMotor")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<string>("NPlaca")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdMarca");

                    b.HasIndex("IdModelo");

                    b.HasIndex("IdTipoCombustible");

                    b.HasIndex("IdTipoVehiculo");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("SistemaDeRentCar.Models.Inspeccion", b =>
                {
                    b.HasOne("SistemaDeRentCar.Models.Cliente", "Cliente")
                        .WithMany("Inspeccion")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaDeRentCar.Models.Empleado", "Empleado")
                        .WithMany("Inspeccion")
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaDeRentCar.Models.Vehiculo", "Vehiculo")
                        .WithMany("Inspeccion")
                        .HasForeignKey("IdVehículo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Empleado");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("SistemaDeRentCar.Models.Modelo", b =>
                {
                    b.HasOne("SistemaDeRentCar.Models.Marca", "Marca")
                        .WithMany("Modelo")
                        .HasForeignKey("IdMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("SistemaDeRentCar.Models.RentaDevolucion", b =>
                {
                    b.HasOne("SistemaDeRentCar.Models.Cliente", "Cliente")
                        .WithMany("RentaDevolucion")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaDeRentCar.Models.Empleado", "Empleado")
                        .WithMany("RentaDevolucion")
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaDeRentCar.Models.Vehiculo", "Vehiculo")
                        .WithMany("RentaDevolucion")
                        .HasForeignKey("IdVehiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Empleado");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("SistemaDeRentCar.Models.Vehiculo", b =>
                {
                    b.HasOne("SistemaDeRentCar.Models.Marca", "Marca")
                        .WithMany("Vehiculo")
                        .HasForeignKey("IdMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaDeRentCar.Models.Modelo", "Modelo")
                        .WithMany("Vehiculo")
                        .HasForeignKey("IdModelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaDeRentCar.Models.TipoDeCombustible", "TipoDeCombustible")
                        .WithMany("Vehiculo")
                        .HasForeignKey("IdTipoCombustible")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaDeRentCar.Models.TipoDeVehiculo", "TipoDeVehiculo")
                        .WithMany("Vehiculo")
                        .HasForeignKey("IdTipoVehiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");

                    b.Navigation("Modelo");

                    b.Navigation("TipoDeCombustible");

                    b.Navigation("TipoDeVehiculo");
                });

            modelBuilder.Entity("SistemaDeRentCar.Models.Cliente", b =>
                {
                    b.Navigation("Inspeccion");

                    b.Navigation("RentaDevolucion");
                });

            modelBuilder.Entity("SistemaDeRentCar.Models.Empleado", b =>
                {
                    b.Navigation("Inspeccion");

                    b.Navigation("RentaDevolucion");
                });

            modelBuilder.Entity("SistemaDeRentCar.Models.Marca", b =>
                {
                    b.Navigation("Modelo");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("SistemaDeRentCar.Models.Modelo", b =>
                {
                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("SistemaDeRentCar.Models.TipoDeCombustible", b =>
                {
                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("SistemaDeRentCar.Models.TipoDeVehiculo", b =>
                {
                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("SistemaDeRentCar.Models.Vehiculo", b =>
                {
                    b.Navigation("Inspeccion");

                    b.Navigation("RentaDevolucion");
                });
#pragma warning restore 612, 618
        }
    }
}
